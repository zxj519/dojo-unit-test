apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'org.built-in-quality'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

buildscript {
  ext {
    springBootVersion = '2.2.4.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}


def activeProfile = project.hasProperty('profile') ? project.property('profile') : 'local'



dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.h2database:h2:1.4.194'
}

test {
  systemProperty 'spring.profiles.active', activeProfile
  testLogging.showStandardStreams = false
  testLogging {
    events "passed", "skipped", "failed"
  }
  reports {
    html.enabled = true
  }
  jacoco {
    append = false
    destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
    classDumpDir = file("$buildDir/jacoco/classpathdumps")
  }
}

jacocoTestReport {
  reports {
    xml.enabled = false
    csv.enabled = false
    html.destination = file("${buildDir}/reports/jacoco")
  }
  afterEvaluate {
    classDirectories = files(classDirectories.files.collect {
      fileTree(dir: it, exclude: ["**/domain/entity/**"])
    })
  }
}



bootRun {
  systemProperty 'spring.profiles.active', activeProfile
  if (project.hasProperty('args')) {
    args project.args.split('\\s+')
  }
}